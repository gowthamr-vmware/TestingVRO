<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="UserinfoService" result-type="Any" api-version="6.0.0" id="e789dbc5-c9af-31cf-b7e3-c8690b78a0f0" version="2.0.9" allowed-operations="vef" category-name="com.vmware.pscoe.ts.vra.identity.services">
  <script encoded="false"><![CDATA[var __global = System.getContext() || (function () {
    return this;
}).call(null);
var VROES = __global.__VROES || (__global.__VROES = System.getModule("com.vmware.pscoe.library.ecmascript").VROES()), exports = {};
var BASE_PATH = "/";
/**
 * A list of identity, account and service management APIs.
 */
var UserinfoService = /** @class */ (function () {
    function UserinfoService(httpClient) {
        this.httpClient = httpClient;
    }
    /**
     * The user information includes all user related fields (which are also part of the associated user ID token). Group ids and names are included.The API diverges from the CSP API only on 'email_verified' field which is currently is not provided by this API.
     * Endpoint URL: '/csp/gateway/am/api/userinfo'
     * Endpoint Method: 'get'
     * @param {string} Authorization
     * @return {GetAccessTokenInfoHttpResponse} Http response (200)
     */
    UserinfoService.prototype.getAccessTokenInfo = function (parameters) {
        var path = "/csp/gateway/am/api/userinfo";
        var headerParameters = {};
        if (parameters["header_Authorization"] !== undefined) {
            headerParameters["Authorization"] = parameters["header_Authorization"];
        }
        path = "" + BASE_PATH + path;
        if (VROES.Shims.stringStartsWith(path, "//")) {
            path = path.slice(1);
        }
        parameters["Content-Type"] && (headerParameters["Content-Type"] = parameters["Content-Type"]);
        var response = this.httpClient.request({
            path: path,
            pathEncoded: true, method: "GET",
            headers: headerParameters,
        });
        return {
            status: response.statusCode,
            headers: response.headers,
            body: response.content && (response.content[0] === "{" || response.content[0] === "[") ? JSON.parse(response.content) : response.content,
        };
    };
    UserinfoService.METADATA = {
        "description": "A list of identity, account and service management APIs.",
        "title": "Identity Service API",
        "version": "1.3.0"
    };
    return UserinfoService;
}());
exports.UserinfoService = UserinfoService;
return exports;
]]></script>
</dunes-script-module>