<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="ResourceElementAppender" result-type="Any" api-version="6.0.0" id="01d13793-3154-4098-aec2-bfc51d4112e0" version="3.3.2" allowed-operations="vef" category-name="com.vmware.pscoe.library.logging.appenders">
  <description><![CDATA[Appender that prints it's input to a resource element]]></description>
  <script encoded="false"><![CDATA[var Class = System.getModule("com.vmware.pscoe.library.class").Class();
var BaseAppender = Class.load("com.vmware.pscoe.library.logging.appenders", "BaseAppender");
var ResolverFactory = Class.load("com.vmware.pscoe.library.logging.appenders.resource.element.resolvers", "ResolverFactory");


var writeOnResourceElement = function (resourceElement, msg) {
	var lockOwner = "";
	try {
		// using try-catch because checking like "if(!workflow)"" fails with [ReferenceError: "workflow" is not defined]
		lockOwner = workflow.id;
	} catch (e) {
		lockOwner = resourceElement.name + "-default-owner";
	}

	// Using the resource element name as lock id, the name of the resource element
	// is unique since is autogenerated at least with a date as part of the name
	// this ensures the lock wont fail because
	// Lock id must be not null and no longer than 100 characters
	LockingSystem.lockAndWait(resourceElement.name, lockOwner);

	resourceElement.reload();
	var mimeContent = resourceElement.getContentAsMimeAttachment();
	mimeContent.content += "\n" + msg;
	resourceElement.setContentFromMimeAttachment(mimeContent);

	LockingSystem.unlock(resourceElement.name, lockOwner);
}

return Class.define(function ResourceElementAppender(properties) {
	BaseAppender.call(this, properties);
	//populate properties
	properties.baseCategoryPath = properties.baseCategoryPath || "Logging";
	var resolverType = properties.resolver || ResolverFactory.Type.Singleton

	var resourceElementResolver = ResolverFactory.getResolver(resolverType, properties);
	var resourceElementState = resourceElementResolver.getResourcesElement();


	this.append = function (severity, msg) {
		if (resourceElementState.state == "unresolved") {
			return; // skip message, is expected the WF can't be resolved
		}
		msg = this.format(severity, msg);
		writeOnResourceElement(resourceElementState.resourceElement, msg);
	}.bind(this);
}, null, BaseAppender);]]></script>
</dunes-script-module>