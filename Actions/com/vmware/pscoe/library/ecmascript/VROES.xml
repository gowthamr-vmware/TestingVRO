<?xml version='1.0' encoding='UTF-8'?>
<dunes-script-module name="VROES" result-type="Any" api-version="6.0.0" id="ec98a25a-8097-45ba-9606-05e68d87349e" version="2.30.0" allowed-operations="vef" category-name="com.vmware.pscoe.library.ecmascript">
  <script encoded="false"><![CDATA[/*-
 * #%L
 * ecmascript
 * %%
 * Copyright (C) 2023 VMware
 * %%
 * Build Tools for VMware Aria
 * Copyright 2023 VMware, Inc.
 *
 * This product is licensed to you under the BSD-2 license (the "License"). You may not use this product except in compliance with the BSD-2 License.
 *
 * This product may include a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the subcomponent's license, as noted in the LICENSE file.
 * #L%
 */
/**
 * @brief    replaces ending dots with underscores and replaces all / with a dot
 *
 * @details    Example 1:
 *     		com.vmware.pscoe.onboarding.sgenov.actions/ing/excludeTest/testHelper.helper
 *     		->
 *     		com.vmware.pscoe.onboarding.sgenov.actions.ing.excludeTest.testHelper_helper
 *     		Example 2:
 *     		com.vmware.pscoe.sgenov.actions.testHelper.helper
 *     		->
 *     		com.vmware.pscoe.sgenov.actions.testHelper.helper
 *     		Example 3:
 *     		com.vmware.pscoe.library.ts.util/ConfigElementAccessor
 *     		->
 *     		com.vmware.pscoe.library.ts.util.ConfigElementAccessor
 *
 * @param    {String} name
 */
function formatName(name) {
    return name.replace(/([^\\\/]+$)/, function (match) {
        var repeatingDots = /([.]).*(\1)/g;
        return repeatingDots.test(match) ? match : match.replace(/[.]([^.]*)$/, '_$1');
    }).replace(/[\\\/]/g, ".");
}
var GLOBAL = System.getContext() || (function () {
    return this;
}).call(null);
if (!GLOBAL.__vroes__) {
    var vroes = GLOBAL.__vroes__ = {};
    var moduleName_1 = "com.vmware.pscoe.library.ecmascript";
    var actions = ["Shims", "Map", "Set", "Promise", "tslib"];
    var Module_1 = System.getModule(moduleName_1).Module();
    vroes.import = Module_1.import;
    vroes.export = Module_1.export;
    vroes.load = Module_1.load;
    vroes.class = Module_1.import("default").from(moduleName_1 + ".Class");
    vroes.require = function (name) {
        return Module_1.import("*").from(formatName(name));
    };
    vroes.importLazy = function (name) {
        var result = {};
        Object.defineProperty(result, "_", {
            get: function () {
                return result.__lazyAction__ || (result.__lazyAction__ = Module_1.import("*").from(formatName(name)));
            },
            enumerable: true,
            configurable: true
        });
        return result;
    };
    var _loop_1 = function (actionName) {
        Object.defineProperty(vroes, actionName, {
            get: function () { return Module_1.import("default").from(moduleName_1 + "." + actionName); },
            enumerable: true,
            configurable: true
        });
    };
    for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
        var actionName = actions_1[_i];
        _loop_1(actionName);
    }
}
return GLOBAL.__vroes__;]]></script>
</dunes-script-module>