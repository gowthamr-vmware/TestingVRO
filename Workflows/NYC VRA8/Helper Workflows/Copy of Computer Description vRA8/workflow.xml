<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item6" object-name="workflow:name=generic" id="0dd13fd4-a997-4486-a8aa-6c6c8f687245" version="1.0.0" api-version="6.0.0" allowed-operations="vef" editor-version="2.0" restartMode="1" resumeFromFailedMode="0"><display-name><![CDATA[Copy of Computer Description vRA8]]></display-name><description><![CDATA[Workflow template to use for vCAC extensibility

Input parameters can be used using vCAC VM properties using the format ExternalWFStubs.[workflow stub name].[vCO input parameter name]. If using plug-in types you need to pass their unique vCO IDs.

Input parameters was tested successfully with : 
- string
- plug-in input types
- number
- boolean]]></description><position y="50.0" x="100.0"/><input><param name="vm" type="VC:VirtualMachine"/><param name="mydesc" type="string"/><param name="Role" type="string"/></input><output><param name="scriptExitCodeOut" type="number"/><param name="scriptOutputTextOut" type="string"/></output><attrib name="Owner" type="string" read-only="false"><value encoded="n"/></attrib><attrib name="vmUsername" type="string" read-only="false"><value encoded="n"><![CDATA[!Admin!]]></value></attrib><attrib name="vmPassword" type="SecureString" read-only="false"><value encoded="n"><![CDATA[8BS21Q6EY73I65R63U75J72Q33Z9109914YB15C023Z14C5187Q18BD884IAEB82D5MD014867T36480B0UA36037EM16796C0Z7F1A3E7L4F60737GDFBF2C5U5FFEEF9HFE0BBF3O7D3637BHF45FB28IC9022AEHF5614B9HFC8712AN700B03CVEFD46DDP4BFEF55NA7DAE82ZC891EE3S]]></value></attrib><attrib name="scriptConfigurationResource" type="ResourceElement" read-only="false"><value encoded="n"><![CDATA[dunes://service.dunes.ch/ResourceElement?id='be1e1c0e-686d-4157-857e-fdd5ee803fed'&dunesName='ResourceElement']]></value></attrib><attrib name="scriptVariables" type="Array/CompositeType(stringToReplace:string,replacingString:string):scriptVariables" read-only="false"><value encoded="n"/></attrib><attrib name="errorCode" type="string" read-only="false"><value encoded="n"/></attrib><workflow-item name="item0" type="end" end-mode="0"><in-binding/><position y="50.0" x="860.0"/></workflow-item><workflow-item name="item3" out-name="item4" type="task"><display-name><![CDATA[Scriptable task]]></display-name><script encoded="false"><![CDATA[System.log("Owner is "+Owner);]]></script><in-binding><bind name="Owner" type="string" export-name="Owner"/></in-binding><out-binding/><position y="60.0" x="320.0"/></workflow-item><workflow-item name="item4" out-name="item5" throw-bind-name="errorCode" type="task"><display-name><![CDATA[Computer Description]]></display-name><script encoded="false"><![CDATA[System.log("Start of Computer Description")
System.log("Server Role: " + Role + " Server Details: " + mydesc)
ComputerDescription = new Array();
ComputerDescriptionToReplace = new Array();
//var Description = "Server Owner :"+Owner+ " Server Role: "+Role+ " Server Details: "+mydesc;
var Description = "Server Role: " + Role + " Server Details: " + mydesc;
System.log("Description : " + Description)
ComputerDescription.push(Description);
System.log("Computer Description : " + ComputerDescription[0]);
var Desctoreplace ="Description";
ComputerDescriptionToReplace.push(Desctoreplace);
System.log("Computer Description to Replace : " + ComputerDescriptionToReplace[0]);]]></script><in-binding><bind name="mydesc" type="string" export-name="mydesc"/><bind name="Owner" type="string" export-name="Owner"/><bind name="Role" type="string" export-name="Role"/></in-binding><out-binding><bind name="ComputerDescription" type="Array/string" export-name="scriptVariables.replacingString"/><bind name="ComputerDescriptionToReplace" type="Array/string" export-name="scriptVariables.stringToReplace"/></out-binding><position y="60.0" x="480.0"/></workflow-item><workflow-item name="item5" out-name="item0" type="link" linked-workflow-id="cc41b134-d222-4ed9-9a08-31ea4e3a49cb"><display-name><![CDATA[Run Computer Description script in VM guest]]></display-name><in-binding><bind name="vm" type="VC:VirtualMachine" export-name="vm"/><bind name="vmUsername" type="string" export-name="vmUsername"/><bind name="vmPassword" type="SecureString" export-name="vmPassword"/><bind name="scriptConfigurationResource" type="ResourceElement" export-name="scriptConfigurationResource"/><bind name="scriptVariables" type="Array/CompositeType(stringToReplace:string,replacingString:string):scriptVariables" export-name="scriptVariables"/></in-binding><out-binding><bind name="scriptExitCodeOut" type="number" export-name="scriptExitCodeOut"/><bind name="scriptOutputTextOut" type="string" export-name="scriptOutputTextOut"/></out-binding><description><![CDATA[Run a script in a guest using existing script configurations. Replaces variables in the script. Optionaly copy additional file and replace its variables as well.

If no working directory is specified:
- it is set to the guest default temp directory if there is a resource file copied
- it is set to default (c:\windows\system32 for Windows /root for Linux) if there is no resource file copied.]]></description><position y="60.0" x="640.0"/></workflow-item><workflow-item name="item6" out-name="item3" type="task"><display-name><![CDATA[TODO: Get Owner]]></display-name><script encoded="false"><![CDATA[// TODO: Get vm owner old version use old object. 

Owner = 'Abc Owner';]]></script><in-binding><bind name="vm" type="VC:VirtualMachine" export-name="vm"/></in-binding><out-binding><bind name="Owner" type="string" export-name="Owner"/></out-binding><description><![CDATA[Simple task with custom script capability.]]></description><position y="60.0" x="180.0"/></workflow-item><presentation/></workflow>